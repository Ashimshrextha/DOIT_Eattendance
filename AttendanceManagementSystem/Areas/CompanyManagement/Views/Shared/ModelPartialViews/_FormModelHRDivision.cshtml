@model SystemViewModels.CompanyManagement.HRCompanyDivisionViewModel
<script src="~/Scripts/jquery.form.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/RequiredField.js"></script>
@Html.AntiForgeryToken()
@Html.HiddenFor(model => model.DataModel.Id)
@Html.HiddenFor(model => model.PageNumber)
@Html.HiddenFor(model => model.PageSize)
@Html.HiddenFor(model => model.OrderingBy)
@Html.HiddenFor(model => model.OrderingDirection)
@Html.HiddenFor(model => model.SearchKey)
<div class="row">
    <div class="row col-md-12 col-sm-12 col-lg-12 form-group">
        <div class="col-md-3 col-sm-3 col-lg-3">
            @Html.LabelFor(model => model.DataModel.IdHRCompany, new { @class = "control-label" })
            @Html.DropDownListFor(model => model.DataModel.IdHRCompany, new SelectList(Model.DDLCompany, "Key", "Value"), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DataModel.IdHRCompany)
        </div>
        <div class="col-md-3 col-sm-3 col-lg-3">
            @Html.LabelFor(model => model.DataModel.IdDivisionType, new { @class = "control-label" })
            @Html.DropDownListFor(model => model.DataModel.IdDivisionType, new SelectList(Model.DDLDivisionType, "Key", "Value"), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DataModel.IdDivisionType)
        </div>
        <div class="col-md-3 col-sm-3 col-lg-3">
            @Html.LabelFor(model => model.DataModel.IdParent_HRCompanyDivision, new { @class = "control-label" })
            @Html.DropDownListFor(model => model.DataModel.IdParent_HRCompanyDivision, new SelectList(Model.DDLDivision,"Key","Value"),new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DataModel.IdParent_HRCompanyDivision)
        </div>
    </div>
    <div class="row col-md-12 col-sm-12 col-lg-12 form-group">
        <div class="col-md-3 col-sm-3 col-lg-3">
            @Html.LabelFor(model => model.DataModel.HRCompanyDivisionName, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.DataModel.HRCompanyDivisionName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DataModel.HRCompanyDivisionName)
        </div>
        <div class="col-md-3 col-sm-3 col-lg-3">
            @Html.LabelFor(model => model.DataModel.HRCompanyDivisionShortName, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.DataModel.HRCompanyDivisionShortName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DataModel.HRCompanyDivisionShortName)
        </div>
        <div class="col-md-3 col-sm-3 col-lg-3">
            @Html.LabelFor(model => model.DataModel.IsActive, new { @class = "control-label" })
            @Html.CheckBoxFor(model => model.DataModel.IsActive, new { @class = "BSswitch" })
            @Html.ValidationMessageFor(model => model.DataModel.IsActive)
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('#DataModel_IdHRCompany').change(function () {
            PopulateDivisionType($(this).val());
            PopulateDivision($(this).val());
        });
        function PopulateDivisionType(idCompany) {
            $.ajax({
                url: 'HRCompany/GetDivisionTypeByCompany_Json',
                type: 'GET',
                dataType: 'JSON',
                data: { idHRCompany: idCompany },
                success: function (result) {
                    var options = $('#DataModel_IdDivisionType');
                    $('option', options).remove();
                    $.each(result, function () {
                        options.append($('<option/>').val(this.Key).text(this.Value));
                    });
                }
            });
        }
        function PopulateDivision(idCompany) {
            $.ajax({
                url: 'HRCompany/GetDivisionByCompany_Json',
                type: 'GET',
                dataType: 'JSON',
                data: { idHRCompany: idCompany },
                success: function (result) {
                    var options = $('#DataModel_IdParent_HRCompanyDivision');
                    $('option', options).remove();
                    $.each(result, function () {
                        options.append($('<option/>').val(this.Key).text(this.Value));
                    });
                }
            });
        }
    });
</script>
