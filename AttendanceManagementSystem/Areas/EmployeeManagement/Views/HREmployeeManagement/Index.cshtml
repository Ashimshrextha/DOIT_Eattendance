@model SystemViewModels.EmployeeManagement.HREmployeeViewModelList
@using SystemStores.GlobalMethod;
@using SystemStores.ENUMData;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    #nav-search{
        display:flex;
        justify-content:end;
        margin-right:0;
        right:0;
    }
</style>
<div class="breadcrumbs ace-save-state" id="breadcrumbs">
    <ul class="breadcrumb">
        <li>
            <i class="ace-icon fa fa-home home-icon"></i>
            <a href="~/@Model.BreadCrumbBaseURL">@Model.BreadCrumbTitle</a>
        </li>
        <li class="active">@Model.BreadCrumbTitle</li>
    </ul><!-- /.breadcrumb -->
    <div class="nav-search" id="nav-search">
            <span class="input-icon">
                <a class="nav-search-input"  onclick="btnclick();" style="cursor:pointer">
                    <i class="ace-icon fa fa-printfa  nav-search-icon">@SystemGlobalMethod.GetButtonText(EnumGlobal.SubmitButtonText.Print) / @SystemGlobalMethod.GetButtonText(EnumGlobal.SubmitButtonText.Export)</i>
                </a>
            </span>
            @*<span class="input-icon">
                <a class="nav-search-input" href="~/@Model.BreadCrumbBaseURL/_ExportHREmployeeAsync">
                    <i class="ace-icon fa fa-file-excel-o nav-search-icon">@SystemGlobalMethod.GetButtonText(EnumGlobal.SubmitButtonText.Export)</i>
                </a>
            </span>*@
            <span class="input-icon">
                <a class="nav-search-input" href="#" id="Create_HREmployee">
                    <i class="ace-icon fa fa-plus  nav-search-icon">@SystemGlobalMethod.GetButtonText(EnumGlobal.SubmitButtonText.Create)</i>
                </a>
            </span>
            <span class="input-icon">
                @Html.DropDownListFor(model => model.PageSize, new SelectList(AttendanceManagementSystem.Services.CommonServices.PageNumber), new { @class = "nav-search-input", @style = "width:55px;" })
            </span>


                <span class="input-icon">
                    @Html.DropDownListFor(model => model.IdHRCompany, new SelectList(Model.DDLCompany, "Key", "Value"), new { @class = "nav-search-input" })
                </span>



                <span class="input-icon">
                    @Html.EnumDropDownListFor(model => model.EmployeeStatus, new { @class = "nav-search-input" })
                </span>

                <span class="input-icon">
                    <input type="text" placeholder="Search ..." class="nav-search-input" id="nav-search-UserSearch" autocomplete="Off" />
                    <i class="ace-icon fa fa-search nav-search-icon"></i>
                </span>
    </div><!-- /.nav-search -->
</div>
<div class="page-content">
    @{ Html.RenderPartial("_SettingContainer");}
    <div class="row">
        <div id="replacetarget_Employee" class="col-xs-12">
            @{ Html.RenderPartial("_ListHREmployeeAsync");}
        </div>
    </div><!-- /.row -->
</div><!-- /.page-content -->



<script type="text/javascript">
    $(document).ready(function () {
        $("input#textBrow").focusout(function () {

            var id = $(this).val();
            $('#IdHRCompany').val(id);
            $('#IdHRCompany').trigger('change');
            // alert($('#IdHRCompany').val());
            $(this).val($('#IdHRCompany option:selected').text());


        });
     
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#PageSize').change(function () {
        $('table,#mask').addClass('loading');
        $.ajax({
           url: '/EmployeeManagement/HREmployeeManagement/_ListHREmployeeAsync',
            type: 'GET',
            data: { idHRCompany: $('#IdHRCompany').val(), active: $('#EmployeeStatus').val(), pageNumber: 1, pageSize: $(this).val(), orderingBy: '@Model.OrderingBy', orderingDirection: '@Model.OrderingDirection', searchKey: '' },
            success: function (result) {
                if (result == '"_Login_"') {
                    window.location = "/Account/Login";
                    return;
                }
                $('#content').html(result);
                $('table,#mask').removeClass('loading');
            }
        });
        });

        var delay = (function () {
            var timer = 0;
            return function (callback, ms, that) {
                clearTimeout(timer);
                timer = setTimeout(callback.bind(that), ms);
            };
        })();

        $('#nav-search-UserSearch').keyup(function () {
            $('table,#mask').addClass('loading');
            delay(function () {
               $.ajax({
				      url: '/EmployeeManagement/HREmployeeManagement/_ListHREmployeeAsync',
                   type: 'GET',
                   data: { idHRCompany:  $('#IdHRCompany').val(),active: $('#EmployeeStatus').val(), pageNumber: 1, pageSize: $('#PageSize').val(), orderingBy: '@Model.OrderingBy', orderingDirection: '@Model.OrderingDirection', searchKey: $(this).val() },
				    success: function (result) {
				        if (result == '"_Login_"') {
				            window.location = "/Account/Login";
				            return;
				        }
				        $('#content').html(result);
				        $('table,#mask').removeClass('loading');
				    }
				});
            }, 1000, this);
        });

        $(function () {
        $.ajaxSetup({ cache: false });
            $('#Create_HREmployee').click(function (e) {
                var url;
                url = '/@Model.BreadCrumbBaseURL' + '/_CreateHREmployeeAsync?pageNumber=' +@Model.PageNumber+'&pageSize=' + $('#PageSize').val() + '&orderingBy=' +'IdHRCompany'+'&orderingDirection='+'ASC';
            $('#myModalContent').load(url, function () {
                $('#myModal').modal({
                    keyboard: true
                }, 'show');
                bindAjaxForm(this);
            });
            return false;
        });
        });

    });
    function btnclick() {
        debugger;
        var status = $('#EmployeeStatus').val();
        var url;
        url = '/EmployeeManagement/HREmployeeManagement/_PrintHREmployeeAsync?status=' + status,
            $('#myModalContent').load(url, function () {
                $('#myModal').modal({
                    keyboard: true
                }, 'show');
                bindAjaxForm(this);
            });
        return false;
    }
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#IdHRCompany').change(function () {
        $('table,#mask').addClass('loading');
        $.ajax({
            url: '/EmployeeManagement/HREmployeeManagement/_ListHREmployeeAsync',
            type: 'GET',
            data: { idHRCompany: $(this).val(),active: $('#EmployeeStatus').val(), pageNumber: 1, pageSize: $('#PageSize').val(), orderingBy: '@Model.OrderingBy', orderingDirection: '@Model.OrderingDirection' },
            success: function (result) {
                if (result == '"_Login_"') {
                    window.location = "/Account/Login";
                    return;
                }
                $('#content').html(result);
                $('table,#mask').removeClass('loading');
            }
        });
		});
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $('#EmployeeStatus').change(function () {
            $('table,#mask').addClass('loading');
             $.ajax({
            url: '/EmployeeManagement/HREmployeeManagement/_ListHREmployeeAsync',
            type: 'GET',
            data: { idHRCompany:  $('#IdHRCompany').val(),active:$(this).val(), pageNumber: 1, pageSize: $('#PageSize').val(), orderingBy: '@Model.OrderingBy', orderingDirection: '@Model.OrderingDirection', searchKey:'' },
            success: function (result) {
            if (result == '"_Login_"') {
                    window.location = "/Account/Login";
                    return;
                }
                $('#content').html(result);
                $('table,#mask').removeClass('loading');
            }
        });
        });
    });
</script>