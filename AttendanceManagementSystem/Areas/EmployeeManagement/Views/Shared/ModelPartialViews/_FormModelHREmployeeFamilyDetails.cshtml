@model SystemViewModels.EmployeeManagement.HREmployeeFamilyDetailsViewModel
<link href="~/Content/jasny-bootstrap.min.css" rel="stylesheet" />
<script src="~/Scripts/jasny-bootstrap.min.js"></script>
<script src="~/Scripts/jquery.form.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/RequiredField.js"></script>
<link href="~/Content/nepali.datepicker.v2.2.min.css" rel="stylesheet" />
<script src="~/Scripts/nepali.datepicker.v2.2.min.js"></script>
<script src="~/Scripts/CustomScript.js"></script>
@Html.AntiForgeryToken()
@Html.HiddenFor(model => model.DataModel.DOB)
@Html.HiddenFor(model => model.DataModel.Id)
@Html.HiddenFor(model => model.DataModel.IdParent_HREmployee)
@Html.HiddenFor(model => model.PageNumber)
@Html.HiddenFor(model => model.PageSize)
@Html.HiddenFor(model => model.OrderingBy)
@Html.HiddenFor(model => model.OrderingDirection)
@Html.HiddenFor(model => model.SearchKey)
<div class="row">
    
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-heading"><h4 class="panel-title">व्यक्तिगत जानकारी</h4></div>
            <div class="panel-body">
                <div class="col-md-12 col-sm-12 col-lg-12">
                    <div class="col-md-9 col-sm-9 col-lg-9">
                        <div class="form-group row">
                            <div class="col-md-3 col-sm-3 col-lg-3">
                                @Html.Label("पुरा नाम", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.DataModel.HREmployeeName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DataModel.HREmployeeName)
                            </div>
                            <div class="col-md-3 col-sm-3 col-lg-3">
                                @Html.LabelFor(model => model.DataModel.HREmployeeNameNP, new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.DataModel.HREmployeeNameNP, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DataModel.HREmployeeNameNP)
                            </div>
                            <div class="col-md-3 col-sm-3 col-lg-3">
                                @Html.LabelFor(model => model.DataModel.Color, new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.DataModel.Color, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DataModel.Color)
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-3 col-sm-3 col-lg-3">
                                @Html.LabelFor(model => model.DataModel.DOB, new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.DataModel.DOBNP, new { @class = "form-control " })
                                @Html.ValidationMessageFor(model => model.DataModel.DOB)
                            </div>
                            <div class="col-md-3 col-sm-3 col-lg-3">
                                @Html.LabelFor(model => model.DataModel.BirthPlace, new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.DataModel.BirthPlace, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DataModel.BirthPlace)
                            </div>
                            <div class="col-md-3 col-sm-3 col-lg-3">
                                @Html.LabelFor(model => model.DataModel.MobileNumber, new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.DataModel.MobileNumber, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DataModel.MobileNumber)
                            </div>
                            <div class="col-md-3 col-sm-3 col-lg-3">
                                @Html.LabelFor(model => model.DataModel.Email, new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.DataModel.Email, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DataModel.Email)
                            </div>
                        </div>
                        <div class="form-group row">
                        </div>
                        <div class="form-group row">
                            <div class="col-md-3 col-sm-3 col-lg-3">
                                @Html.LabelFor(model => model.DataModel.IdGender, new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.DataModel.IdGender, new SelectList(Model.DDLGender, "Key", "Value"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DataModel.IdGender)
                            </div>
                            <div class="col-md-3 col-sm-3 col-lg-3">
                                @Html.LabelFor(model => model.DataModel.IdMarital, new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.DataModel.IdMarital, new SelectList(Model.DDLMaritalStatus, "Key", "Value"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DataModel.IdMarital)
                            </div>
                            <div class="col-md-3 col-sm-3 col-lg-3">
                                @Html.LabelFor(model => model.DataModel.IdMotherTongue, new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.DataModel.IdMotherTongue, new SelectList(Model.DDLLanguage, "Key", "Value"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DataModel.IdMotherTongue)
                            </div>
                            <div class="col-md-3 col-sm-3 col-lg-3">
                                @Html.LabelFor(model => model.DataModel.IdBloodGroup, new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.DataModel.IdBloodGroup, new SelectList(Model.DDLBloodGroup, "Key", "Value"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DataModel.IdBloodGroup)
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-6 col-sm-6 col-lg-6">
                                @Html.LabelFor(model => model.DataModel.Remark, new { @class = "control-label" })
                                @Html.TextAreaFor(model => model.DataModel.Remark, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DataModel.Remark)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-3 col-lg-3 pull-right">
                        <div class="form-group pull-right">
                            <div class="form-inline" data-toggle="tooltip" data-placement="top" title="Please Upload Only JPG & PNG File & File Should be less than 1 mb in size">
                                <div class="fileinput fileinput-new" data-provides="fileinput">
                                    <div class="fileinput-preview thumbnail" data-trigger="fileinput" style="width: 200px; height: 150px;">
                                        <img src="~/images/avatars/avatar.png" style="width:150px;height:200px;" />
                                    </div>
                                    <div>
                                        <span class="hidden">
                                            <input type="file" name="StudentImageUploaded">
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <table class="table table-border">
                                <colgroup>
                                    <col style="width:44%" />
                                    <col style="width:1%" />
                                    <col style="width:55%" />
                                </colgroup>
                                <tbody>
                                    <tr>
                                        <th>@Html.LabelFor(model => model.DataModel.IsDisabled, new { @class = "control-label" })</th>
                                        <th>:</th>
                                        <td>
                                            @Html.CheckBoxFor(model => model.DataModel.IsDisabled, new { @class = "BSswitch" })
                                            @Html.ValidationMessageFor(model => model.DataModel.IsDisabled)
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>@Html.LabelFor(model => model.DataModel.IsActive, new { @class = "control-label" })</th>
                                        <th>:</th>
                                        <td>
                                            @Html.CheckBoxFor(model => model.DataModel.IsActive, new { @class = "BSswitch" })
                                            @Html.ValidationMessageFor(model => model.DataModel.IsActive)
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('#DataModel_DOBNP').nepaliDatePicker({
            npdMonth: true,
            npdYear: true,
            onChange: function () {
                $('#DataModel_DOB').val(BS2AD($('#DataModel_DOBNP').val()));
            }
        });
    });


</script>

