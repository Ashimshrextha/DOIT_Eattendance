//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SystemData
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EAttendanceSystemDBEntities : DbContext
    {
        public EAttendanceSystemDBEntities()
            : base("name=EAttendanceSystemDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BiometricTemplateType> BiometricTemplateTypes { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<CityCategory> CityCategories { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<CountryDistrict> CountryDistricts { get; set; }
        public virtual DbSet<CountryState> CountryStates { get; set; }
        public virtual DbSet<HRCalendar> HRCalendars { get; set; }
        public virtual DbSet<HRCompanyAssignNotification> HRCompanyAssignNotifications { get; set; }
        public virtual DbSet<HRCompanyDeviceMonitor> HRCompanyDeviceMonitors { get; set; }
        public virtual DbSet<HRCompanyDivision> HRCompanyDivisions { get; set; }
        public virtual DbSet<HRCompanyDivisionType> HRCompanyDivisionTypes { get; set; }
        public virtual DbSet<HRCompanyHistory> HRCompanyHistories { get; set; }
        public virtual DbSet<HRCompanyLeaveStatusType> HRCompanyLeaveStatusTypes { get; set; }
        public virtual DbSet<HRCompanyLeaveType> HRCompanyLeaveTypes { get; set; }
        public virtual DbSet<HRCompanyNotification> HRCompanyNotifications { get; set; }
        public virtual DbSet<HRCompanySystemSupport> HRCompanySystemSupports { get; set; }
        public virtual DbSet<HRCompanyType> HRCompanyTypes { get; set; }
        public virtual DbSet<HRDesignation> HRDesignations { get; set; }
        public virtual DbSet<HRDevice> HRDevices { get; set; }
        public virtual DbSet<HREmployeeAddress> HREmployeeAddresses { get; set; }
        public virtual DbSet<HREmployeeAttendanceHistory> HREmployeeAttendanceHistories { get; set; }
        public virtual DbSet<HREmployeeBankAccount> HREmployeeBankAccounts { get; set; }
        public virtual DbSet<HREmployeeBankList> HREmployeeBankLists { get; set; }
        public virtual DbSet<HREmployeeBiometricTemplate> HREmployeeBiometricTemplates { get; set; }
        public virtual DbSet<HREmployeeBloodGroup> HREmployeeBloodGroups { get; set; }
        public virtual DbSet<HREmployeeCategory> HREmployeeCategories { get; set; }
        public virtual DbSet<HREmployeeCompanyFacility> HREmployeeCompanyFacilities { get; set; }
        public virtual DbSet<HREmployeeContact> HREmployeeContacts { get; set; }
        public virtual DbSet<HREmployeeContactType> HREmployeeContactTypes { get; set; }
        public virtual DbSet<HREmployeeEducation> HREmployeeEducations { get; set; }
        public virtual DbSet<HREmployeeEducationType> HREmployeeEducationTypes { get; set; }
        public virtual DbSet<HREmployeeJobStatu> HREmployeeJobStatus { get; set; }
        public virtual DbSet<HREmployeeKaajHistory> HREmployeeKaajHistories { get; set; }
        public virtual DbSet<HREmployeeLeaveHistory> HREmployeeLeaveHistories { get; set; }
        public virtual DbSet<HREmployeeMarital> HREmployeeMaritals { get; set; }
        public virtual DbSet<HREmployeeMessageService> HREmployeeMessageServices { get; set; }
        public virtual DbSet<HREmployeeNationalIdentityType> HREmployeeNationalIdentityTypes { get; set; }
        public virtual DbSet<HREmployeeProperty> HREmployeeProperties { get; set; }
        public virtual DbSet<HREmployeeRelationType> HREmployeeRelationTypes { get; set; }
        public virtual DbSet<HREmployeeSalaryHistory> HREmployeeSalaryHistories { get; set; }
        public virtual DbSet<HREmployeeServiceType> HREmployeeServiceTypes { get; set; }
        public virtual DbSet<HREmployeeServiceTypeGroup> HREmployeeServiceTypeGroups { get; set; }
        public virtual DbSet<HREmployeeSex> HREmployeeSexes { get; set; }
        public virtual DbSet<HRLanguage> HRLanguages { get; set; }
        public virtual DbSet<HRLanguageConversion> HRLanguageConversions { get; set; }
        public virtual DbSet<HRPublicHoliday> HRPublicHolidays { get; set; }
        public virtual DbSet<LoginsHistory> LoginsHistories { get; set; }
        public virtual DbSet<SystemComment> SystemComments { get; set; }
        public virtual DbSet<SystemDatabaseBackup> SystemDatabaseBackups { get; set; }
        public virtual DbSet<SystemDetail> SystemDetails { get; set; }
        public virtual DbSet<UserLog> UserLogs { get; set; }
        public virtual DbSet<HRCompany> HRCompanies { get; set; }
        public virtual DbSet<SystemMenu> SystemMenus { get; set; }
        public virtual DbSet<DeviceLog> DeviceLogs { get; set; }
        public virtual DbSet<HREmployeeReligion> HREmployeeReligions { get; set; }
        public virtual DbSet<HREmployee> HREmployees { get; set; }
        public virtual DbSet<HREmployeeNationalIdentity> HREmployeeNationalIdentities { get; set; }
        public virtual DbSet<MembershipProvider> MembershipProviders { get; set; }
        public virtual DbSet<HREmployeeJobHistory> HREmployeeJobHistories { get; set; }
        public virtual DbSet<SystemPermissionByHREmployee> SystemPermissionByHREmployees { get; set; }
        public virtual DbSet<SystemPermissionByRole> SystemPermissionByRoles { get; set; }
        public virtual DbSet<Login> Logins { get; set; }
        public virtual DbSet<HREmployeeRole> HREmployeeRoles { get; set; }
        public virtual DbSet<SystemStructure> SystemStructures { get; set; }
        public virtual DbSet<HRDeviceModel> HRDeviceModels { get; set; }
        public virtual DbSet<HRDeviceModelUserVerficationMode> HRDeviceModelUserVerficationModes { get; set; }
        public virtual DbSet<SystemDetailCategory> SystemDetailCategories { get; set; }
    
        public virtual ObjectResult<proc_Authorization_Result> proc_Authorization(string paramUserName, string paramPassword_MD5, string paramPassword_SHA)
        {
            var paramUserNameParameter = paramUserName != null ?
                new ObjectParameter("paramUserName", paramUserName) :
                new ObjectParameter("paramUserName", typeof(string));
    
            var paramPassword_MD5Parameter = paramPassword_MD5 != null ?
                new ObjectParameter("paramPassword_MD5", paramPassword_MD5) :
                new ObjectParameter("paramPassword_MD5", typeof(string));
    
            var paramPassword_SHAParameter = paramPassword_SHA != null ?
                new ObjectParameter("paramPassword_SHA", paramPassword_SHA) :
                new ObjectParameter("paramPassword_SHA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Authorization_Result>("proc_Authorization", paramUserNameParameter, paramPassword_MD5Parameter, paramPassword_SHAParameter);
        }
    
        public virtual ObjectResult<proc_GetNarbarMenu_Result> proc_GetNarbarMenu(Nullable<int> paramIdHREmployeeRole, Nullable<long> paramIdHREmployee, string paramLanguage)
        {
            var paramIdHREmployeeRoleParameter = paramIdHREmployeeRole.HasValue ?
                new ObjectParameter("paramIdHREmployeeRole", paramIdHREmployeeRole) :
                new ObjectParameter("paramIdHREmployeeRole", typeof(int));
    
            var paramIdHREmployeeParameter = paramIdHREmployee.HasValue ?
                new ObjectParameter("paramIdHREmployee", paramIdHREmployee) :
                new ObjectParameter("paramIdHREmployee", typeof(long));
    
            var paramLanguageParameter = paramLanguage != null ?
                new ObjectParameter("paramLanguage", paramLanguage) :
                new ObjectParameter("paramLanguage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetNarbarMenu_Result>("proc_GetNarbarMenu", paramIdHREmployeeRoleParameter, paramIdHREmployeeParameter, paramLanguageParameter);
        }
    
        public virtual ObjectResult<proc_GetSystemLeftMenu_Result> proc_GetSystemLeftMenu(Nullable<int> paramIdHREmployeeRole, Nullable<long> paramIdHREmployee, string paramArea, string paramController, string paramAction, string paramLanguage)
        {
            var paramIdHREmployeeRoleParameter = paramIdHREmployeeRole.HasValue ?
                new ObjectParameter("paramIdHREmployeeRole", paramIdHREmployeeRole) :
                new ObjectParameter("paramIdHREmployeeRole", typeof(int));
    
            var paramIdHREmployeeParameter = paramIdHREmployee.HasValue ?
                new ObjectParameter("paramIdHREmployee", paramIdHREmployee) :
                new ObjectParameter("paramIdHREmployee", typeof(long));
    
            var paramAreaParameter = paramArea != null ?
                new ObjectParameter("paramArea", paramArea) :
                new ObjectParameter("paramArea", typeof(string));
    
            var paramControllerParameter = paramController != null ?
                new ObjectParameter("paramController", paramController) :
                new ObjectParameter("paramController", typeof(string));
    
            var paramActionParameter = paramAction != null ?
                new ObjectParameter("paramAction", paramAction) :
                new ObjectParameter("paramAction", typeof(string));
    
            var paramLanguageParameter = paramLanguage != null ?
                new ObjectParameter("paramLanguage", paramLanguage) :
                new ObjectParameter("paramLanguage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetSystemLeftMenu_Result>("proc_GetSystemLeftMenu", paramIdHREmployeeRoleParameter, paramIdHREmployeeParameter, paramAreaParameter, paramControllerParameter, paramActionParameter, paramLanguageParameter);
        }
    
        public virtual ObjectResult<proc_GetSystemTabbed_Result> proc_GetSystemTabbed(Nullable<int> paramIdHREmployeeRole, Nullable<long> paramIdHREmployee, string paramArea, string paramController, string paramAction, Nullable<int> paramIdSystemStructure, string paramLanguage)
        {
            var paramIdHREmployeeRoleParameter = paramIdHREmployeeRole.HasValue ?
                new ObjectParameter("paramIdHREmployeeRole", paramIdHREmployeeRole) :
                new ObjectParameter("paramIdHREmployeeRole", typeof(int));
    
            var paramIdHREmployeeParameter = paramIdHREmployee.HasValue ?
                new ObjectParameter("paramIdHREmployee", paramIdHREmployee) :
                new ObjectParameter("paramIdHREmployee", typeof(long));
    
            var paramAreaParameter = paramArea != null ?
                new ObjectParameter("paramArea", paramArea) :
                new ObjectParameter("paramArea", typeof(string));
    
            var paramControllerParameter = paramController != null ?
                new ObjectParameter("paramController", paramController) :
                new ObjectParameter("paramController", typeof(string));
    
            var paramActionParameter = paramAction != null ?
                new ObjectParameter("paramAction", paramAction) :
                new ObjectParameter("paramAction", typeof(string));
    
            var paramIdSystemStructureParameter = paramIdSystemStructure.HasValue ?
                new ObjectParameter("paramIdSystemStructure", paramIdSystemStructure) :
                new ObjectParameter("paramIdSystemStructure", typeof(int));
    
            var paramLanguageParameter = paramLanguage != null ?
                new ObjectParameter("paramLanguage", paramLanguage) :
                new ObjectParameter("paramLanguage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GetSystemTabbed_Result>("proc_GetSystemTabbed", paramIdHREmployeeRoleParameter, paramIdHREmployeeParameter, paramAreaParameter, paramControllerParameter, paramActionParameter, paramIdSystemStructureParameter, paramLanguageParameter);
        }
    }
}
